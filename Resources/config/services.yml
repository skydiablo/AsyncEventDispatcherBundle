services:
    #============ DISPATCHER =============
    async_event_dispatcher:
        class: SkyDiablo\AsyncEventDispatcherBundle\EventDispatcher\AsyncEventDispatcher
        arguments:
            - '@service_container'

    async_collector_event_dispatcher:
        class: SkyDiablo\AsyncEventDispatcherBundle\EventDispatcher\AsyncCollectorEventDispatcher
        arguments:
            - ~ #queue: override by AsyncEventDispatcherExtension
            - '@service_container'
            - '@async_event_dispatcher'
            - '@async_event_dispatcher.serializer_manager.container_aware_event_serializer_manager'
            - '@logger'

    # override SF EventDispatcher with this alias to our new AsyncCollectorEventDispatcher
    event_dispatcher: '@async_collector_event_dispatcher'

    #============ SERIALIZER =============
    async_event_dispatcher.serializer_manager.container_aware_event_serializer_manager:
        class: SkyDiablo\AsyncEventDispatcherBundle\Serializer\Manager\ContainerAwareEventSerializerManager

    #============ SERVICES =============
    async_event_dispatcher.service.queue_worker:
        class: SkyDiablo\AsyncEventDispatcherBundle\Service\QueueWorkerService
        arguments:
            - ~ #queue: override by AsyncEventDispatcherExtension
            - '@request_stack'
            - '@logger'
            - '@async_event_dispatcher.serializer_manager.container_aware_event_serializer_manager'
            - '@async_event_dispatcher'